blueprint:
  name: LD2450 Zone Creation
  description: >
    Create a zone for the LD2450 radar sensor (Apollo MTR-1/R-PRO-1) by collecting X/Y position data for a target over a set duration. Automatically handles single target mode, outlier filtering, and provides a summary of the created zone.
  domain: automation
  input:
    zone_x1_entity:
      name: Zone X1 Number Entity
      description: Select the X1 number entity for the zone you want to set.
      selector:
        entity:
          domain: number
    multi_target_switch:
      name: Multi-Target Tracking Switch (MTR-1 only)
      description: >
        (Optional) The switch entity to control multi-target tracking. Only needed for MTR-1. Leave blank for R-PRO-1.
      default: ""
      selector:
        entity:
          domain: switch
          multiple: false
    duration:
      name: Collection Duration (seconds)
      description: How long to collect X/Y data for zone creation.
      default: 60
      selector:
        number:
          min: 10
          max: 300
          step: 1
    padding:
      name: Padding (mm)
      description: Padding to add to the zone boundaries (in mm).
      default: 100
      selector:
        number:
          min: 0
          max: 1000
          step: 10

mode: single

variables:
  zone_x1_entity: !input zone_x1_entity
  device_base_name: "{{ zone_x1_entity.split('_zone_')[0].split('number.')[1] }}"
  zone: "{{ zone_x1_entity.split('_zone_')[1].split('_')[0] }}"
  x_entity: "sensor.{{ device_base_name }}_target_1_x"
  y_entity: "sensor.{{ device_base_name }}_target_1_y"
  zone_x1: "number.{{ device_base_name }}_zone_{{ zone }}_x1"
  zone_x2: "number.{{ device_base_name }}_zone_{{ zone }}_x2"
  zone_y1: "number.{{ device_base_name }}_zone_{{ zone }}_y1"
  zone_y2: "number.{{ device_base_name }}_zone_{{ zone }}_y2"
  multi_switch: !input multi_target_switch
  duration: !input duration
  padding: !input padding

action:
  - alias: "Store current multi-target state and switch to single target mode (if switch provided)"
    choose:
      - conditions:
          - condition: template
            value_template: "{{ multi_switch != '' }}"
        sequence:
          - variables:
              prev_multi_state: "{{ states(multi_switch) }}"
          - service: switch.turn_off
            target:
              entity_id: "{{ multi_switch }}"
  - alias: "Initialize data collection"
    variables:
      x_values: []
      y_values: []
      start_time: "{{ now().timestamp() }}"
  - alias: "Collect X/Y data for duration"
    repeat:
      while:
        - condition: template
          value_template: "{{ (now().timestamp() - start_time) < duration }}"
      sequence:
        - variables:
            x: "{{ states(x_entity) | float(0) }}"
            y: "{{ states(y_entity) | float(0) }}"
        - if:
            - condition: template
              value_template: "{{ x is number and y is number }}"
          then:
            - variables:
                x_values: "{{ x_values + [x] }}"
                y_values: "{{ y_values + [y] }}"
        - delay: 1
  - alias: "Calculate min/max and apply padding"
    variables:
      min_x: "{{ (x_values | length > 0 and (x_values | min) or 0) - padding }}"
      max_x: "{{ (x_values | length > 0 and (x_values | max) or 0) + padding }}"
      min_y: "{{ (y_values | length > 0 and (y_values | min) or 0) - padding }}"
      max_y: "{{ (y_values | length > 0 and (y_values | max) or 0) + padding }}"
  - alias: "Set zone coordinates"
    sequence:
      - service: number.set_value
        data:
          entity_id: "{{ zone_x1 }}"
          value: "{{ [[min_x, -4860.0] | max, 4860.0] | min }}"
      - service: number.set_value
        data:
          entity_id: "{{ zone_x2 }}"
          value: "{{ [[max_x, -4860.0] | max, 4860.0] | min }}"
      - service: number.set_value
        data:
          entity_id: "{{ zone_y1 }}"
          value: "{{ [[min_y, 0] | max, 7560.0] | min }}"
      - service: number.set_value
        data:
          entity_id: "{{ zone_y2 }}"
          value: "{{ [[max_y, 0] | max, 7560.0] | min }}"
  - alias: "Restore previous multi-target state (if switch provided)"
    choose:
      - conditions:
          - condition: template
            value_template: "{{ multi_switch != '' and prev_multi_state is defined and prev_multi_state == 'on' }}"
        sequence:
          - service: switch.turn_on
            target:
              entity_id: "{{ multi_switch }}"
  - alias: "Send summary notification"
    service: persistent_notification.create
    data:
      title: "LD2450 Zone Created"
      message: >
        Zone {{ zone }} created.\n
        X1: {{ min_x }}\n
        Y1: {{ min_y }}\n
        X2: {{ max_x }}\n
        Y2: {{ max_y }}\n
        Padding: {{ padding }} mm\n
        Duration: {{ duration }} seconds\n
